(library
 (name dkml_apps_common)
 (libraries bos astring sexplib))

(rule
 (target scripts.ml)
 (deps
  "%{project_root}/vendor/drd/src/unix/create-opam-switch.sh"
  "%{project_root}/vendor/dkml-compiler/src/standard-compiler-env-to-ocaml-configure-env.sh"
  "%{project_root}/vendor/dkml-compiler/src/standard-compiler-env-to-ocaml-configure-launcher.sh"
  "%{project_root}/vendor/drd/src/unix/private/platform-opam-exec.sh"
  "%{project_root}/vendor/drc/unix/_within_dev.sh"
  "%{project_root}/vendor/drc/unix/_common_build.sh"
  "%{project_root}/vendor/drc/unix/_common_tool.sh"
  "%{project_root}/vendor/drc/unix/crossplatform-functions.sh")
 (action
  (progn
   (run
    %{bin:ocaml-crunch}
    "--mode=plain"
    "--output=%{target}"
    "--ext=sh"
    "%{project_root}"))))

; Because .dkmlroot is not recognized as an extension by ocaml-crunch, we need to separately
; get this string embedded. We will use the {| ... |} OCaml multiline string format.

(rule
 (target dkml_root.ml)
 (deps
  (:dkmlroot "%{project_root}/.dkmlroot"))
 (action
  (with-stdout-to
   %{target}
   (progn
    (echo "let dkmlroot_contents = {embeddingdkmlroot|")
    (cat %{dkmlroot})
    (echo "|embeddingdkmlroot}")))))

(rule
 (targets target_context.ml)
 (deps
  (:discover config/discover.exe))
 (action
  (run %{discover})))
